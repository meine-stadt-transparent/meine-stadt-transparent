[tool.poetry]
name = "meine-stadt-transparent"
version = "0.2.14"
description = "A website to bring municipal politics to citizens"
authors = ["Tobias Hößl <tobias@hoessl.eu>", "Konstantin Schütze <konstin@mailbox.org>"]
license = "MIT"
readme = "Readme.md"
include = ["mainapp/assets/bundles/**/*", "mainapp/migrations/*", "manage.py", "node_modules/pdfjs-dist/viewer/**/*"]
exclude = ["mainapp/assets/*"]
packages = [
    { include = "cms" },
    { include = "importer" },
    { include = "mainapp" },
    { include = "meine_stadt_transparent" },
]

[tool.poetry.dependencies]
python = "^3.8"
Django = ">=4.1.1,<4.2.0"
PyPDF2 = { version = "^3.0.0", extras = ["crypto"] }
Wand = "^0.6.0"
cattrs = { version = "^22.1.0", optional = true }
django-allauth = "^0.53"
django-anymail = { version = "^9.0", extras = ["mailjet", "sendgrid"] }
django-decorator-include = ">=2.1,<4.0"
django-elasticsearch-dsl = ">=7.1,<7.4"
django-environ = "^0.10.0"
django-geojson = "^3.0"
django-q = { extras = ["sentry"], version = "^1.3.9" }
django-settings-export = "^1.2"
django-simple-history = "^3.0"
django-webpack-loader = "~1.8.0"
django-widget-tweaks = "^1.4"
django_csp = "^3.4"
elasticsearch = "7.17.9"
elasticsearch-dsl = "^7.3"
geoextract = "^0.3.1"
geopy = "^2.0.0"
gunicorn = "^20.0"
html2text = ">=2019.8,<2021.0"
icalendar = "^5.0.4"
jsonfield = "^3.1"
minio = ">=5,<8"
mysqlclient = ">=1.3,<3.0"
osm2geojson = "^0.2.0"
pgpy = { version = "^0.6.0", optional = true }
psycopg2 = "^2.9.3"
python-dateutil = "^2.7"
python-slugify = "^8.0.0"
requests = "^2.22"
sentry-sdk = "^1.0.0"
splinter = "~0.19"
tqdm = "^4.29"
wagtail = "~4.2.1"

[tool.poetry.dev-dependencies]
black = { version = "^23.3.0", extras = ["d"] }
django-debug-toolbar = "^3.0"
pytest-django = "^4.1"
responses = "^0.23.0"
selenium = "4.9.0"
tox = "^4.2.3"
ruff = "0.0.263"

[tool.poetry.extras]
pgp = ["pgpy"]
import-json = ["cattrs"]

[tool.poetry.scripts]
mst-manage = 'manage:main'

[tool.black]
extend-exclude = '''
/(
  | mainapp/migrations
  | cms/migrations
  | importer/migrations
)/
'''

[tool.ruff]
ignore = ["E501"]
extend-exclude = ["etc"]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true

[testenv]
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install -E import-json
commands =
    poetry run pytest
"""

[build-system]
requires = ["poetry~=1.1.0"]
build-backend = "poetry.masonry.api"
